#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ewu.Domain.Db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinJiaoFengJu")]
	public partial class trackingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertTracking(Tracking instance);
    partial void UpdateTracking(Tracking instance);
    partial void DeleteTracking(Tracking instance);
    #endregion
		
		public trackingDataContext() : 
				base(global::Ewu.Domain.Properties.Settings.Default.LinJiaoFengJuConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public trackingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public trackingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public trackingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public trackingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tracking> Tracking
		{
			get
			{
				return this.GetTable<Tracking>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tracking")]
	public partial class Tracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DLogUID;
		
		private string _SponsorTrackingNum;
		
		private System.Nullable<System.DateTime> _SponsorTrackingDate;
		
		private string _RecipientTrackingNum;
		
		private System.Nullable<System.DateTime> _RecipientTrackingDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDLogUIDChanging(string value);
    partial void OnDLogUIDChanged();
    partial void OnSponsorTrackingNumChanging(string value);
    partial void OnSponsorTrackingNumChanged();
    partial void OnSponsorTrackingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSponsorTrackingDateChanged();
    partial void OnRecipientTrackingNumChanging(string value);
    partial void OnRecipientTrackingNumChanged();
    partial void OnRecipientTrackingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecipientTrackingDateChanged();
    #endregion
		
		public Tracking()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLogUID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DLogUID
		{
			get
			{
				return this._DLogUID;
			}
			set
			{
				if ((this._DLogUID != value))
				{
					this.OnDLogUIDChanging(value);
					this.SendPropertyChanging();
					this._DLogUID = value;
					this.SendPropertyChanged("DLogUID");
					this.OnDLogUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorTrackingNum", DbType="VarChar(50)")]
		public string SponsorTrackingNum
		{
			get
			{
				return this._SponsorTrackingNum;
			}
			set
			{
				if ((this._SponsorTrackingNum != value))
				{
					this.OnSponsorTrackingNumChanging(value);
					this.SendPropertyChanging();
					this._SponsorTrackingNum = value;
					this.SendPropertyChanged("SponsorTrackingNum");
					this.OnSponsorTrackingNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorTrackingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SponsorTrackingDate
		{
			get
			{
				return this._SponsorTrackingDate;
			}
			set
			{
				if ((this._SponsorTrackingDate != value))
				{
					this.OnSponsorTrackingDateChanging(value);
					this.SendPropertyChanging();
					this._SponsorTrackingDate = value;
					this.SendPropertyChanged("SponsorTrackingDate");
					this.OnSponsorTrackingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientTrackingNum", DbType="VarChar(50)")]
		public string RecipientTrackingNum
		{
			get
			{
				return this._RecipientTrackingNum;
			}
			set
			{
				if ((this._RecipientTrackingNum != value))
				{
					this.OnRecipientTrackingNumChanging(value);
					this.SendPropertyChanging();
					this._RecipientTrackingNum = value;
					this.SendPropertyChanged("RecipientTrackingNum");
					this.OnRecipientTrackingNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientTrackingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecipientTrackingDate
		{
			get
			{
				return this._RecipientTrackingDate;
			}
			set
			{
				if ((this._RecipientTrackingDate != value))
				{
					this.OnRecipientTrackingDateChanging(value);
					this.SendPropertyChanging();
					this._RecipientTrackingDate = value;
					this.SendPropertyChanged("RecipientTrackingDate");
					this.OnRecipientTrackingDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
